{"ast":null,"code":"var _jsxFileName = \"/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport SemesterColumn from './SemesterColumn'; // import { CourseCardInfo } from './CourseCard';\n// const itemsFromBackend = [\n//   { id: uuid(), content: 'CS205' },\n//   { id: uuid(), content: 'CS111' },\n//   { id: uuid(), content: 'CS112' },\n//   { id: uuid(), content: 'MAT205' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n// ];\n// const columnsFromBackend = {\n//   [uuid()]: {\n//     title: 'Fall 2022',\n//     items: itemsFromBackend,\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2022',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Fall 2023',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2024',\n//     items: [],\n//   },\n// };\n// eslint-disable-next-line no-unused-vars\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction createSemesterColumns(plainJSON) {\n  const columns = {};\n  const {\n    plan\n  } = plainJSON;\n\n  for (let semesterIndex = 0; semesterIndex < 2; semesterIndex += 1) {\n    const courseSemesterID = uuid();\n    columns[courseSemesterID] = {};\n    columns[courseSemesterID].name = 'Season 20XX';\n    columns[courseSemesterID].items = [];\n\n    for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n      columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n    }\n  }\n\n  return columns;\n}\n\nfunction Dashboard() {\n  _s();\n\n  // const [columns, setColumns] = useState<ColumnContainer | null>(null);\n  const [columns, setColumns] = useState(columnsFromBackend); // useEffect(() => {\n  //   // fetchDashBoardData(setColumns);\n  //   axios.get('/api/v1/user/626e0c0cdfc7f88aa17ad114/plan').then((res) => {\n  //     setColumns(createSemesterColumns(res.data));\n  //   }).catch((err) => {\n  //     setColumns(null);\n  //     console.warn('Columns could not be fetched: ');\n  //     console.warn(err);\n  //   });\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    children: columns == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading course data...\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(_ref => {\n        let [columnId, column] = _ref;\n        return /*#__PURE__*/_jsxDEV(SemesterColumn, {\n          columnId: columnId,\n          column: column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"bYCmdCIiWWb+ZDQE6HV7NzBHfWY=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","DragDropContext","v4","uuid","SemesterColumn","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","createSemesterColumns","plainJSON","plan","semesterIndex","courseSemesterID","name","courseIndex","length","push","Dashboard","columnsFromBackend","display","justifyContent","height","Object","entries","map","columnId"],"sources":["/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport SemesterColumn, { SemesterColumnInfo } from './SemesterColumn';\n// import { CourseCardInfo } from './CourseCard';\n\n// const itemsFromBackend = [\n//   { id: uuid(), content: 'CS205' },\n//   { id: uuid(), content: 'CS111' },\n//   { id: uuid(), content: 'CS112' },\n//   { id: uuid(), content: 'MAT205' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n// ];\n\n// const columnsFromBackend = {\n//   [uuid()]: {\n//     title: 'Fall 2022',\n//     items: itemsFromBackend,\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2022',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Fall 2023',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2024',\n//     items: [],\n//   },\n// };\n\n// eslint-disable-next-line no-unused-vars\ninterface ColumnContainer {\n  [key: string]: SemesterColumnInfo;\n}\n\nconst onDragEnd = (result: any, columns: any, setColumns: any) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\nfunction createSemesterColumns(plainJSON) {\n  const columns = {};\n  const { plan } = plainJSON;\n\n  for (let semesterIndex = 0; semesterIndex < 2; semesterIndex += 1) {\n    const courseSemesterID = uuid();\n    columns[courseSemesterID] = {};\n    columns[courseSemesterID].name = 'Season 20XX';\n    columns[courseSemesterID].items = [];\n\n    for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n      columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n    }\n  }\n\n  return columns;\n}\n\nfunction Dashboard() {\n  // const [columns, setColumns] = useState<ColumnContainer | null>(null);\n  const [columns, setColumns] = useState(columnsFromBackend);\n\n  // useEffect(() => {\n  //   // fetchDashBoardData(setColumns);\n  //   axios.get('/api/v1/user/626e0c0cdfc7f88aa17ad114/plan').then((res) => {\n  //     setColumns(createSemesterColumns(res.data));\n  //   }).catch((err) => {\n  //     setColumns(null);\n  //     console.warn('Columns could not be fetched: ');\n  //     console.warn(err);\n  //   });\n  // }, []);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\n      {columns == null ? <>Loading course data...</> : (\n        <DragDropContext\n          onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n        >\n          {\n            Object.entries(columns).map(([columnId, column]) => (\n              <SemesterColumn columnId={columnId} column={column} />\n            ))\n          }\n        </DragDropContext>\n      )}\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}