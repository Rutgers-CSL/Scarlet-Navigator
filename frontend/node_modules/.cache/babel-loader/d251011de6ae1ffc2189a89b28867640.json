{"ast":null,"code":"var _jsxFileName = \"/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport SemesterColumn from './SemesterColumn'; // import { CourseCardInfo } from './CourseCard';\n// const itemsFromBackend = [\n//   { id: uuid(), content: 'CS205' },\n//   { id: uuid(), content: 'CS111' },\n//   { id: uuid(), content: 'CS112' },\n//   { id: uuid(), content: 'MAT205' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n// ];\n// const columnsFromBackend = {\n//   [uuid()]: {\n//     title: 'Fall 2022',\n//     items: itemsFromBackend,\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2022',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Fall 2023',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2024',\n//     items: [],\n//   },\n// };\n// eslint-disable-next-line no-unused-vars\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n}; // eslint-disable-next-line no-unused-vars\n\n\nfunction fetchDashBoardData(setColumns) {\n  const userObjectId = '626e0c0cdfc7f88aa17ad114';\n  const columns = {};\n  fetch(`/api/v1/user/${userObjectId}/plan`).then(response => response.json()).then(res => {\n    console.log(res);\n    const {\n      plan\n    } = res;\n\n    for (let semesterIndex = 0; semesterIndex < plan.length; semesterIndex += 1) {\n      const courseSemesterID = uuid();\n      columns[courseSemesterID] = {};\n      columns[courseSemesterID].name = 'Season 20XX';\n      columns[courseSemesterID].items = [];\n\n      for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n        columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n      }\n    }\n\n    console.log(columns);\n    setColumns(columns);\n  }).catch(err => {\n    console.warn(err);\n  });\n  console.log('out');\n  return columns;\n}\n\nfunction Dashboard() {\n  _s();\n\n  const [columns, setColumns] = useState(null); // const [columns, setColumns] = useState(columnsFromBackend);\n\n  useEffect(() => {\n    fetchDashBoardData(setColumns);\n  }, []);\n  useEffect(() => {\n    if (!columns) return;\n    Object.entries(columns).forEach(_ref => {\n      let [columnId, column] = _ref;\n      console.log(columnId);\n      console.log(column);\n    });\n  }, [columns]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    children: columns == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading course data...\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(_ref2 => {\n        let [columnId, column] = _ref2;\n        return /*#__PURE__*/_jsxDEV(SemesterColumn, {\n          columnId: columnId,\n          column: column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"jlvqR2MDkrF6pfvvVJuM1QY127Q=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","v4","uuid","SemesterColumn","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","fetchDashBoardData","userObjectId","fetch","then","response","json","res","console","log","plan","semesterIndex","length","courseSemesterID","name","courseIndex","push","catch","err","warn","Dashboard","Object","entries","forEach","columnId","display","justifyContent","height","map"],"sources":["/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\n\nimport SemesterColumn, { SemesterColumnInfo } from './SemesterColumn';\n// import { CourseCardInfo } from './CourseCard';\n\n// const itemsFromBackend = [\n//   { id: uuid(), content: 'CS205' },\n//   { id: uuid(), content: 'CS111' },\n//   { id: uuid(), content: 'CS112' },\n//   { id: uuid(), content: 'MAT205' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n//   { id: uuid(), content: 'MAT300' },\n// ];\n\n// const columnsFromBackend = {\n//   [uuid()]: {\n//     title: 'Fall 2022',\n//     items: itemsFromBackend,\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2022',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Fall 2023',\n//     items: [],\n//   },\n//   [uuid()]: {\n//     title: 'Spring 2024',\n//     items: [],\n//   },\n// };\n\n// eslint-disable-next-line no-unused-vars\ninterface ColumnContainer {\n  [key: string]: SemesterColumnInfo;\n}\n\nconst onDragEnd = (result: any, columns: any, setColumns: any) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\n// eslint-disable-next-line no-unused-vars\nfunction fetchDashBoardData(setColumns) {\n  const userObjectId = '626e0c0cdfc7f88aa17ad114';\n  const columns = {};\n\n  fetch(`/api/v1/user/${userObjectId}/plan`)\n    .then((response) => response.json())\n    .then((res) => {\n      console.log(res);\n      const { plan } = res;\n      for (let semesterIndex = 0; semesterIndex < plan.length; semesterIndex += 1) {\n        const courseSemesterID = uuid();\n        columns[courseSemesterID] = {};\n        columns[courseSemesterID].name = 'Season 20XX';\n        columns[courseSemesterID].items = [];\n\n        for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n          columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n        }\n      }\n\n      console.log(columns);\n      setColumns(columns);\n    }).catch((err) => {\n      console.warn(err);\n    });\n\n  console.log('out');\n  return columns;\n}\n\nfunction Dashboard() {\n  const [columns, setColumns] = useState<ColumnContainer | null>(null);\n  // const [columns, setColumns] = useState(columnsFromBackend);\n\n  useEffect(() => {\n    fetchDashBoardData(setColumns);\n  }, []);\n\n  useEffect(() => {\n    if (!columns) return;\n    Object.entries(columns).forEach(([columnId, column]) => {\n      console.log(columnId);\n      console.log(column);\n    });\n  }, [columns]);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\n      {columns == null ? <>Loading course data...</> : (\n        <DragDropContext\n          onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n        >\n          {\n            Object.entries(columns).map(([columnId, column]) => (\n              <SemesterColumn columnId={columnId} column={column} />\n            ))\n          }\n        </DragDropContext>\n      )}\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}