{"ast":null,"code":"var _jsxFileName = \"/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport SemesterColumn from './SemesterColumn'; // import { CourseCardInfo } from './CourseCard';\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'CS205'\n}, {\n  id: uuid(),\n  content: 'CS111'\n}, {\n  id: uuid(),\n  content: 'CS112'\n}, {\n  id: uuid(),\n  content: 'MAT205'\n}, {\n  id: uuid(),\n  content: 'MAT300'\n}, {\n  id: uuid(),\n  content: 'MAT300'\n}, {\n  id: uuid(),\n  content: 'MAT300'\n}, {\n  id: uuid(),\n  content: 'MAT300'\n}];\nconst columnsFromBackend = {\n  [uuid()]: {\n    title: 'Fall 2022',\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    title: 'Spring 2022',\n    items: []\n  },\n  [uuid()]: {\n    title: 'Fall 2023',\n    items: []\n  },\n  [uuid()]: {\n    title: 'Spring 2024',\n    items: []\n  }\n}; // eslint-disable-next-line no-unused-vars\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n}; // eslint-disable-next-line no-unused-vars\n\n\nfunction fetchDashBoardData() {\n  const userObjectId = '626e0c0cdfc7f88aa17ad114';\n  const columns = {};\n  fetch(`http://localhost:3000/api/v1/user/${userObjectId}/plan`).then(response => response.json()).then(res => {\n    console.log(res);\n    const {\n      plan\n    } = res;\n\n    for (let semesterIndex = 0; semesterIndex < plan.length; semesterIndex += 1) {\n      const courseSemesterID = uuid();\n      columns[courseSemesterID] = {};\n      columns[courseSemesterID].name = 'Season 20XX';\n      columns[courseSemesterID].items = [];\n\n      for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n        columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n      }\n    }\n  }).catch(err => {\n    console.warn(err);\n  });\n  console.log('out');\n  return columns;\n}\n\nfunction Dashboard() {\n  _s();\n\n  // const [columns, setColumns] = useState<ColumnContainer | null>(null);\n  const [columns, setColumns] = useState(columnsFromBackend);\n  useEffect(() => {\n    // setColumns(fetchDashBoardData());\n    Object.entries(columns).forEach(_ref => {\n      let [columnId, column] = _ref;\n      console.log(columnId);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    children: columns == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading course data...\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(_ref2 => {\n        let [columnId, column] = _ref2;\n        return /*#__PURE__*/_jsxDEV(SemesterColumn, {\n          columnId: columnId,\n          column: column\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"huGruGjJci4S6uK+1vjgORT4w44=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx"],"names":["React","useEffect","useState","DragDropContext","v4","uuid","SemesterColumn","itemsFromBackend","id","content","columnsFromBackend","title","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","fetchDashBoardData","userObjectId","fetch","then","response","json","res","console","log","plan","semesterIndex","length","courseSemesterID","name","courseIndex","push","catch","err","warn","Dashboard","Object","entries","forEach","columnId","display","justifyContent","height","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\n\nimport SemesterColumn, { SemesterColumnInfo } from './SemesterColumn';\n// import { CourseCardInfo } from './CourseCard';\n\nconst itemsFromBackend = [\n  { id: uuid(), content: 'CS205' },\n  { id: uuid(), content: 'CS111' },\n  { id: uuid(), content: 'CS112' },\n  { id: uuid(), content: 'MAT205' },\n  { id: uuid(), content: 'MAT300' },\n  { id: uuid(), content: 'MAT300' },\n  { id: uuid(), content: 'MAT300' },\n  { id: uuid(), content: 'MAT300' },\n];\n\nconst columnsFromBackend = {\n  [uuid()]: {\n    title: 'Fall 2022',\n    items: itemsFromBackend,\n  },\n  [uuid()]: {\n    title: 'Spring 2022',\n    items: [],\n  },\n  [uuid()]: {\n    title: 'Fall 2023',\n    items: [],\n  },\n  [uuid()]: {\n    title: 'Spring 2024',\n    items: [],\n  },\n};\n\n// eslint-disable-next-line no-unused-vars\ninterface ColumnContainer {\n  [key: string]: SemesterColumnInfo;\n}\n\nconst onDragEnd = (result: any, columns: any, setColumns: any) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\n// eslint-disable-next-line no-unused-vars\nfunction fetchDashBoardData() {\n  const userObjectId = '626e0c0cdfc7f88aa17ad114';\n  const columns = {};\n\n  fetch(`http://localhost:3000/api/v1/user/${userObjectId}/plan`)\n    .then((response) => response.json())\n    .then((res) => {\n      console.log(res);\n      const { plan } = res;\n      for (let semesterIndex = 0; semesterIndex < plan.length; semesterIndex += 1) {\n        const courseSemesterID = uuid();\n        columns[courseSemesterID] = {};\n        columns[courseSemesterID].name = 'Season 20XX';\n        columns[courseSemesterID].items = [];\n\n        for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n          columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n        }\n      }\n    }).catch((err) => {\n      console.warn(err);\n    });\n\n  console.log('out');\n  return columns;\n}\n\nfunction Dashboard() {\n  // const [columns, setColumns] = useState<ColumnContainer | null>(null);\n  const [columns, setColumns] = useState(columnsFromBackend);\n\n  useEffect(() => {\n    // setColumns(fetchDashBoardData());\n    Object.entries(columns).forEach(([columnId, column]) => {\n\n      console.log(columnId)\n    });\n\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', height: '100%' }}>\n      {columns == null ? <>Loading course data...</> : (\n        <DragDropContext\n          onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n        >\n          {\n            Object.entries(columns).map(([columnId, column]) => (\n              <SemesterColumn columnId={columnId} column={column} />\n            ))\n          }\n        </DragDropContext>\n      )}\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}