{"ast":null,"code":"var _jsxFileName = \"/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport SemesterColumn from './SemesterColumn'; // import { CourseCardInfo } from './CourseCard';\n// eslint-disable-next-line no-unused-vars\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction createSemesterColumns(plainJSON) {\n  const columns = {};\n  const {\n    plan\n  } = plainJSON;\n\n  for (let semesterIndex = 0; semesterIndex < plan.length; semesterIndex += 1) {\n    const courseSemesterID = uuid();\n    columns[courseSemesterID] = {};\n    columns[courseSemesterID].title = 'Season 20XX';\n    columns[courseSemesterID].items = [];\n\n    for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n      columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n    }\n  }\n\n  return columns;\n}\n\nfunction updateStudentPlan(columns) {\n  if (!columns) {\n    return;\n  }\n\n  const arrayOfCourseObjectIds = [];\n  Object.keys(columns).forEach(columnId => {\n    arrayOfCourseObjectIds.push(columns[columnId].items.map(item => item._id));\n  });\n  axios.patch('/api/v1/user/6271db95cde76c1f74b093b8/plan', {}).then(response => {});\n}\n\nfunction Dashboard() {\n  _s();\n\n  const [columns, setColumns] = useState(null);\n  useEffect(() => {\n    axios.get('/api/v1/user/6271db95cde76c1f74b093b8/plan').then(res => {\n      setColumns(createSemesterColumns(res.data));\n    }).catch(err => {\n      setColumns(null);\n      console.warn('Columns could not be fetched: ');\n      console.warn(err);\n    });\n  }, []);\n  useEffect(() => {\n    updateStudentPlan(columns);\n  }, [columns]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      height: '100%',\n      gridTemplateColumns: 'auto auto auto auto',\n      columnGap: '1fr 1fr 1fr'\n    },\n    children: columns == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading course data...\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: result => onDragEnd(result, columns, setColumns),\n      children: Object.entries(columns).map(_ref => {\n        let [columnId, column] = _ref;\n        return /*#__PURE__*/_jsxDEV(SemesterColumn, {\n          columnId: columnId,\n          column: column\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"jlvqR2MDkrF6pfvvVJuM1QY127Q=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","DragDropContext","v4","uuid","axios","SemesterColumn","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","createSemesterColumns","plainJSON","plan","semesterIndex","length","courseSemesterID","title","courseIndex","push","updateStudentPlan","arrayOfCourseObjectIds","Object","keys","forEach","columnId","map","item","_id","patch","then","response","Dashboard","get","res","data","catch","err","console","warn","display","height","gridTemplateColumns","columnGap","entries"],"sources":["/Users/kevinmonisit/Desktop/OSS/Scarlet Navigator/frontend/src/components/Dashboard.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\nimport SemesterColumn, { SemesterColumnInfo } from './SemesterColumn';\n// import { CourseCardInfo } from './CourseCard';\n\n// eslint-disable-next-line no-unused-vars\ninterface ColumnContainer {\n  [key: string]: SemesterColumnInfo;\n}\n\nconst onDragEnd = (result: any, columns: any, setColumns: any) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        items: copiedItems,\n      },\n    });\n  }\n};\n\nfunction createSemesterColumns(plainJSON) {\n  const columns = {};\n  const { plan } = plainJSON;\n\n  for (let semesterIndex = 0; semesterIndex < plan.length; semesterIndex += 1) {\n    const courseSemesterID = uuid();\n    columns[courseSemesterID] = {};\n    columns[courseSemesterID].title = 'Season 20XX';\n    columns[courseSemesterID].items = [];\n\n    for (let courseIndex = 0; courseIndex < plan[semesterIndex].length; courseIndex += 1) {\n      columns[courseSemesterID].items.push(plan[semesterIndex][courseIndex]);\n    }\n  }\n\n  return columns;\n}\n\nfunction updateStudentPlan(columns: ColumnContainer | null) {\n  if (!columns) {\n    return;\n  }\n\n  const arrayOfCourseObjectIds = [];\n  Object.keys(columns).forEach((columnId) => {\n    arrayOfCourseObjectIds.push(columns[columnId].items.map((item) => item._id));\n  })\n\n  axios.patch('/api/v1/user/6271db95cde76c1f74b093b8/plan', {\n\n  }).then((response) => {\n\n  });\n}\n\nfunction Dashboard() {\n  const [columns, setColumns] = useState<ColumnContainer | null>(null);\n\n  useEffect(() => {\n    axios.get('/api/v1/user/6271db95cde76c1f74b093b8/plan').then((res) => {\n      setColumns(createSemesterColumns(res.data));\n    }).catch((err) => {\n      setColumns(null);\n      console.warn('Columns could not be fetched: ');\n      console.warn(err);\n    });\n  }, []);\n\n  useEffect(() => {\n    updateStudentPlan(columns);\n  }, [columns]);\n\n  return (\n    <div style={{ display: 'grid', height: '100%', gridTemplateColumns: 'auto auto auto auto', columnGap: '1fr 1fr 1fr' }}>\n      {columns == null ? <>Loading course data...</> : (\n        <DragDropContext\n          onDragEnd={(result) => onDragEnd(result, columns, setColumns)}\n        >\n          {\n            Object.entries(columns).map(([columnId, column]) => (\n              <SemesterColumn key={columnId} columnId={columnId} column={column} />\n            ))\n          }\n        </DragDropContext>\n      )}\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}